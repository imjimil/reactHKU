{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/promotions.js","redux/comments.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","onClick","to","id","width","CardImgOverlay","Menu","menu","dishes","map","key","Breadcrumb","BreadcrumbItem","active","About","leaders","RenderLeader","Media","tag","left","middle","object","body","heading","CardHeader","title","list","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","minlength","maxlength","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","Component","CommentForm","state","isModalOpen","toggleModal","setState","postComment","dishId","rating","author","comment","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","color","RenderComments","comments","comm","Intl","DateTimeFormat","year","month","day","format","Date","date","RenderDish","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Footer","commentsFailed","errmess","payload","addComments","promosFailed","addPromos","promos","dishesFailed","addDishes","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","promoLoading","promoErrMess","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","message","feedback","newFeedback","firstname","lastname","telnum","email","agree","contactType","responce","actions","reset","Dishes","action","Promotions","Comments","concat","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0a31bed.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n}; ","export const baseUrl = 'http://localhost:3001/';\r\n","import React from 'react';\r\nimport {Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n\r\n    else if (item == null){\r\n\r\n        return(<div></div>)\r\n        \r\n        }\r\n\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <FadeTransform in \r\n            transformProps = {{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }} >\r\n                <Card>\r\n                    <CardImg src={ baseUrl +item.image } alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 md-1 col-md\">\r\n                    <RenderCard item={props.dish} isLoading = {props.dishesLoading} errMess = {props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 md-1 col-md\">\r\n                    <RenderCard item={props.promotion} isLoading = { props.promosLoading } errMess = { props.promosErrMess } />\r\n                </div>\r\n                <div className=\"col-12 md-1 col-md\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem ({dish, onClick}) {\r\n      return (\r\n          <Card>\r\n            <Link to={`/menu/${dish.id}`}>\r\n              <CardImg width=\"100%\" src={ baseUrl + dish.image } alt={dish.name} />\r\n              <CardImgOverlay>\r\n                  <CardTitle>{dish.name}</CardTitle>\r\n              </CardImgOverlay>\r\n              </Link>\r\n          </Card>\r\n      );\r\n  }\r\n //this is also function\r\n  const Menu = (props) => {\r\n    const menu= props.dishes.dishes.map((dish) => {\r\n      return (\r\n        <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n          <RenderMenuItem dish= { dish } />\r\n        </div>\r\n      );\r\n    });\r\n    if(props.dishes.isLoading) {\r\n      return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">            \r\n                <Loading />\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n\r\n    else if (props.dishes.errMess) {\r\n      return(\r\n          <div className=\"container\">\r\n              <div className=\"row\"> \r\n                  <div className=\"col-12\">\r\n                      <h4>{props.dishes.errMess}</h4>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      );\r\n    }\r\n    \r\n    else\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem>\r\n                <Link to={'/home'}>Home</Link>\r\n              </BreadcrumbItem>\r\n              <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n              <h3>Menu</h3>\r\n              <hr />\r\n            </div>\r\n          </div>\r\n        <div className=\"row\">\r\n          {menu}\r\n        </div>\r\n        </div>\r\n      );\r\n\r\n  }\r\n\r\n\r\n    \r\n\r\nexport default Menu;\r\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Fade, Stagger } from 'react-animation-components';\nimport { baseUrl } from '../shared/baseUrl';\n\nfunction About(props) {\n\n    const leaders = props.leaders.leaders.map((leader) => {\n        return (\n            <RenderLeader leader={leader} />\n        );\n    });\n\n    function RenderLeader({leader}){\n        return (\n            <Fade in>\n                <div key={leader.id} className=\"col-12 mt-5\">\n                    <Media tag=\"li\">\n                    <Media left middle>\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\n                    </Media>\n                    <Media body className=\"ml-5\">\n                        <Media heading>{leader.name}</Media>\n                        <p>{leader.designation}</p>\n                        <p>{leader.description}</p>\n                    </Media>\n                    </Media>\n                </div>\n              </Fade>\n        );\n    }\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us!</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        <Stagger in>\n                                {leaders}\n                        </Stagger>\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass  Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n\r\n        //const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                        <Link to={'/home'}>Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us!</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us!</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>  \r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"https://skype.com\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={ (values) => this.handleSubmit(values) }>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minlength: minLength(3), maxlength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{\r\n                                        required: 'Required',\r\n                                        minlength: 'Must be greater than 2 characters',\r\n                                        maxlength: 'Must be less than 15 characters' \r\n                                    }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                        \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(9), maxLength: maxLength(10), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 9 numbers',\r\n                                            maxLength: 'Must be 10 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\" /> {' '}\r\n                                            <strong>May we Contact You?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"8\" placeholder=\"Your Feedback\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button className=\"btn btn-primary\" type=\"submit\">Send Feedback</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, Label, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Row, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\n  export class CommentForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { isModalOpen: false};\r\n      this.toggleModal = this.toggleModal.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n      this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n      });\r\n  }\r\n\r\n  handleSubmit(values) {\r\n      this.toggleModal();\r\n      this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n}\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <Button outline onClick={this.toggleModal} className=\"btn\">\r\n            <span className=\"fa fa-pencil fa-lg\"> Submit comment</span>\r\n        </Button>\r\n        <Modal isOpen={ this.state.isModalOpen } toggle={ this.toggleModal } >\r\n          <ModalHeader toggle={ this.toggleModal } > Submit Content </ModalHeader>\r\n          <ModalBody>\r\n          <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <Row className=\"form-group\">\r\n                  <Col md={12}>\r\n                    <Label htmlFor=\"rating\">Rating</Label>\r\n                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                        <option>1</option>\r\n                        <option>2</option>\r\n                        <option>3</option>\r\n                        <option>4</option>\r\n                        <option>5</option>\r\n                    </Control.select>\r\n                  </Col>                          \r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                  <Col md={12}>\r\n                    <Label htmlFor=\"author\">Your Name</Label>\r\n                    <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" className=\"form-control\" \r\n                      validators={{\r\n                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                      }}\r\n                    />    \r\n                    <Errors\r\n                        className=\"text-danger\"\r\n                        model=\".author\"\r\n                        show=\"touched\"\r\n                        messages={{\r\n                          required: 'Required',\r\n                          minLength: 'Must be greater than 2 characters',\r\n                          maxLength: 'Must be 15 characters or less'\r\n                        }}\r\n                    />                            \r\n                  </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                  <Col md={12}>\r\n                    <Label htmlFor=\"comment\">Comment</Label>\r\n                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"6\" className=\"form-control\" />                           \r\n                  </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                  <Col md={12}>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                  </Col>\r\n              </Row>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n\r\n  \r\n\r\n  function RenderComments({ comments, postComment, dishId }){\r\n    if (comments==null){\r\n      return (\r\n        <div></div>\r\n      );\r\n    }\r\n\r\n    const comm= comments.map(comment => {\r\n      return (\r\n        \r\n        <Fade in>\r\n          <li key={comment.id}> \r\n            <p>{comment.comment}</p>\r\n            <p>--{comment.author},\r\n            &nbsp;\r\n            {new Intl.DateTimeFormat('en-US', {\r\n              year: 'numeric',\r\n              month: 'short',\r\n              day:'2-digit'\r\n            }).format(new Date(comment.date))}\r\n            </p>\r\n          </li>\r\n        </Fade>\r\n        \r\n      );\r\n    });\r\n\r\n    return(\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n      <h4> Comments</h4>\r\n      <ul className=\"list-unstyled\">{ comm }</ul>\r\n      <ul className=\"list-unstyled\">\r\n      <CommentForm dishId = { dishId } postComment = { postComment } />\r\n      </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  function RenderDish({ dish }) {\r\n    if (dish!=null){\r\n      return(\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n          <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n              <CardImg width=\"100%\" src={ baseUrl + dish.image } alt={dish.name} />\r\n              <CardBody>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n                <CardText>{dish.description}</CardText>\r\n              </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return(\r\n        <div></div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const DishDetail = (props) => {\r\n\r\n    if (props.isLoading) {\r\n      return(\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Loading />\r\n          </div>\r\n        </div>\r\n      );  \r\n    }\r\n    \r\n    else if (props.errMess) {\r\n      return(\r\n          <div className=\"container\">\r\n              <div className=\"row\">            \r\n                  <h4>{props.errMess}</h4>\r\n              </div>\r\n          </div>\r\n      );\r\n  }\r\n\r\n  else if (props.dish != null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to={\"/menu\"}>Menu</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>\r\n              {props.dish.name}\r\n            </BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>{props.dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n      <div className=\"row\">\r\n        <RenderDish dish= {props.dish} />\r\n        <RenderComments comments = {props.comments}\r\n          postComment = {props.postComment}\r\n          dishId = {props.dish.id} />\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n  else\r\n    return(\r\n      <div></div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Jumbotron, Nav, NavbarToggler, Collapse, NavItem, Modal, ModalBody, ModalHeader, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username:\" + this.username.value + \" password:\" + this.password.value + \" remember:\" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            //react fragment\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home                                    \r\n                                    </NavLink>  \r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'>\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/menu'>\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'>\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal} >\r\n                                        <span className=\"fa fa-sign-in fa-lg\">Login</span>\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n\r\n                <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Ristorante Con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>  \r\n                </Jumbotron>\r\n                <Modal isOpen={ this.state.isModalOpen } toggle={ this.toggleModal } >\r\n                    <ModalHeader toggle={ this.toggleModal } > Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input } />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input } />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input } />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl'\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n  const newFeedback = {\r\n     firstname: feedback.firstname,\r\n     lastname: feedback.lastname,\r\n     telnum: feedback.telnum,\r\n     email: feedback.email,\r\n     agree: feedback.agree,\r\n     contactType: feedback.contactType,\r\n     message: feedback.message\r\n  }\r\n   \r\n  return fetch(baseUrl + 'feedback', {\r\n     method: 'POST',\r\n     body: JSON.stringify(newFeedback),\r\n     headers: {\r\n        'Content-Type': 'application/json'\r\n     },\r\n     credentials: 'same-origin'\r\n  })\r\n  .then(response => {\r\n     if (response.ok) {\r\n        return response;\r\n     }\r\n     else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n     }\r\n  }, \r\n  error => {\r\n     var errmess = new Error(error.message);    \r\n     throw errmess;\r\n  })\r\n  .then(response => response.json())\r\n  .then(response => { console.log(\"Current State is: \" + JSON.stringify(response)); \r\n       alert(\"Thank you for your feedback!<br/>\" + JSON.stringify(response)); })\r\n  .catch(error => { console.log('Post comments ', error.message);\r\n       alert('Your feedback could not be posted\\nError: ' + error.message); })\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n        .then( responce => responce.json())\r\n        .then( dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n  dispatch(leadersLoading(true));\r\n  \r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n     if (response.ok) {\r\n        return response;\r\n     }\r\n     else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n     }\r\n  }, \r\n  error => {\r\n     var errmess = new Error(error.message);\r\n     throw errmess;\r\n  })\r\n  .then(response => response.json())\r\n  .then(promos => dispatch(addLeaders(promos)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n})","export const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const DISHES_LOADING = \"DISHES_LOADING\";\r\nexport const DISHES_FAILED = \"DISHES_FAILED\";\r\nexport const ADD_DISHES = \"ADD_DISHES\";\r\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport About from './AboutComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent'\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchLeaders, postFeedback } from '../redux/ActionCreators'\r\nimport { actions } from 'react-redux-form';\r\nimport { fetchComments, fetchPromos } from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>( {\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (feedback) => dispatch(postFeedback(feedback)),\r\n  fetchDishes: () => { dispatch(fetchDishes()) },\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n  fetchComments: () => { dispatch(fetchComments()) },\r\n  fetchPromos: () => { dispatch(fetchPromos()) },\r\n  fetchLeaders: () => { dispatch(fetchLeaders()) }\r\n} );\r\n\r\nclass Main extends Component {\r\n\r\n  \r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders()\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n        dishesLoading = {this.props.dishes.isLoading}\r\n        dishesErrMess = { this.props.dishes.errMess}\r\n        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n        promoLoading={this.props.promotions.isLoading}\r\n        promoErrMess={this.props.promotions.errMess}\r\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]} \r\n        leadersLoading={this.props.leaders.isLoading} \r\n        leadersErrMess={this.props.leaders.errMess} />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n        isLoading = { this.props.dishes.isLoading }\r\n        errMess = { this.props.dishes.errMess}\r\n        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n        commentsErrMess = { this.props.comments.errMess }\r\n        postComment={ this.props.postComment }\r\n         />\r\n        \r\n      );\r\n    }\r\n\r\n    return ( \r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={ this.props.location.key } classNames=\"page\" timeout={ 300 } >\r\n            <Switch>\r\n              <Route path=\"/home\" component={ HomePage } />\r\n              <Route exact path=\"/menu\" component={ () => <Menu dishes={this.props.dishes} />} />\r\n              <Route path=\"/menu/:dishId\" component={ DishWithId } />\r\n              <Route exact path=\"/contactus\" component={() => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} /> } />\r\n              <Route path=\"/aboutus\" component={ () => <About leaders={this.props.leaders} />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes:[]\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n        errMess: null,\r\n        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n    default:\r\n        return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n      errMess: null,\r\n      leaders: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n         return {...state, isLoading: false, errMess: null, leaders: action.payload}; \r\n              \r\n      case ActionTypes.LEADERS_LOADING:\r\n         return {...state, isLoading: true, errMess: null, leaders: []}; \r\n         \r\n      case ActionTypes.LEADERS_FAILED:\r\n         return {...state, isLoading: false, errMess: action.payload, leaders: []}; \r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent'\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\n\nconst store = ConfigureStore();\nclass App extends Component {\n\n  \n  render() {\n    return (\n      <Provider store={ store } >\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Promotions } from './promotions';\r\nimport { Comments } from './comments';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}